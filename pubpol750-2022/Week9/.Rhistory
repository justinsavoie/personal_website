ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix')) +
geom_density(aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,stat = 'identity')
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,position = 'fill')
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,adjust=2)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,position = "stack")
Parliamentarians
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stacked")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
Parliamentarians
Parliamentarians
Parliamentarians %>%
filter(year_period!="(2000,2025]")
Parliamentarians <- Parliamentarians %>%
filter(year_period!="(2000,2025]")
ggplot() +
geom_density(data=Parliamentarians,aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.8)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_wrap(~Gender)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_wrap(~Gender)
Parliamentarians
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office),fill=party) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender)) +
scale_fill_manual(values=c("darkblue","red","orange"))
library(readxl)
library(tidyverse)
library(lubridate)
Parliamentarians <- read_excel("~/Downloads/Parliamentarians.xlsx")
# filter by whether "MP" is in the variable `Type of Parliamentarian`
Parliamentarians <- filter(Parliamentarians,str_detect(`Type of Parliamentarian`,"MP"))
# create (mutate) variables for start and end date of the parliamentarian
# str_sub(x,5,14) returns the values between positions 5 and 14
# e.g. str_sub("abcdefghytr56",3,10) returns "cdefghyt"
# yms() coerces dates-as-string to date format
Parliamentarians <- mutate(Parliamentarians,date_started=ymd(str_sub(`Type of Parliamentarian`,5,14)))
Parliamentarians <- mutate(Parliamentarians,date_ended=str_sub(`Type of Parliamentarian`,18,27))
# Clean and extract party and province. These are regular expressions and it's fine if it's not clear. Regular expression extract/replace data based on patterns.
# If you are curious, take a look at this:
# https://jfjelstul.github.io/regular-expressions-tutorial/
Parliamentarians <- mutate(Parliamentarians,party=trimws(str_extract(`Political Affiliation`, "[^\\()]+")))
Parliamentarians <- mutate(Parliamentarians,province=str_extract(`Province/Territory`, "[^\\\r]+"))
# Change format of date to date format
Parliamentarians <- mutate(Parliamentarians,date_ended=ymd(Parliamentarians$date_ended,quiet = TRUE))
# If no end date, Parliamentarian is still in HoC so put today as end date.
# If you are very curious, look up difference between ifelse() and if_else()
Parliamentarians <- mutate(Parliamentarians,date_ended=if_else(is.na(date_ended),ymd(today()),date_ended))
# Keep only those parties, let's not keep the small parties / indps
names_keep <- c("Conservative", "Conservative Party of Canada", "Liberal Party of Canada",
"New Democratic Party", "Progressive Conservative Party")
Parliamentarians <- filter(Parliamentarians, party %in% names_keep)
# Keep only variables we need
Parliamentarians <- select(Parliamentarians, Name,Gender,party,date_started,date_ended,province)
# Delete rows where missing values
Parliamentarians <- na.omit(Parliamentarians)
ggplot(Parliamentarians,aes(x=Gender)) +
geom_bar()
ggsave("~/Desktop/figure1.png")
Parliamentarians_grouped <- group_by(Parliamentarians,Gender)
to_plot <- summarise(Parliamentarians_grouped,count=n())
ggplot(to_plot,aes(x=Gender,y=count)) +
geom_bar(stat='identity')
ggsave("~/Desktop/figure2.png")
Parliamentarians <- mutate(Parliamentarians,year=year(date_started))
Parliamentarians <- mutate(Parliamentarians,year_period=cut(year,c(1860,1900,1950,2000,2025),dig.lab = 4))
ggplot(Parliamentarians,aes(x=Gender)) +
geom_bar() +
facet_wrap(~year_period) +
scale_y_continuous(limits=c(0,1300))
ggsave("~/Desktop/figure3.png")
ggplot(Parliamentarians,aes(x=Gender,fill=party)) +
geom_bar() +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","darkblue","red","orange","darkblue"))
ggsave("~/Desktop/figure4.png")
Parliamentarians <- mutate(Parliamentarians,party=recode(party,!!!c("Conservative Party of Canada"="Conservative",
"Progressive Conservative Party"="Conservative")))
ggplot(Parliamentarians,aes(x=Gender,fill=party)) +
geom_bar() +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","red","orange"))
ggsave("~/Desktop/figure5.png")
to_plot <- Parliamentarians %>%
group_by(Gender,party,year_period) %>%
count()
ggplot(to_plot,aes(x=Gender,y=n,fill=party)) +
geom_bar(stat = 'identity') +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","red","orange"))
Parliamentarians <- Parliamentarians %>%
mutate(year_in_office=year(date_ended)-year(date_started))
Parliamentarians <- Parliamentarians %>%
filter(year_period!="(2000,2025]")
ggplot() +
geom_density(data=Parliamentarians,aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender)) +
scale_fill_manual(values=c("darkblue","red","orange"))
mtcars_grouped <- group_by(mtcars,cyl)
count(mtcars_grouped)
summarise(mtcars_grouped,n=n())
mtcars %>%
group_by(cyl) %>%
count()
my_vector <- c(1,2,3,4,8)
mean(my_vector)
my_vector %>%
mean()
dem_score <- read_csv("https://www.justinsavoie.com/pubpol750-2022/homework1/parliamentarians_sub.csv")
dem_score <- read_csv("https://www.justinsavoie.com/pubpol750-2022/homework1/Parliamentarians_subset100.csv")
Parliamentarians_subset100 <- read_csv("/Users/justinsavoie/Documents/personal_repos/personal_website/pubpol750-2022/Homework1/Parliamentarians_subset100.csv")
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
library(haven)
library(readstata13)
read_spss()
?factor
1+4i
(1+4i)*i
(1+4i)*1i
?raw
library(tidyverse)
flights
library(nycflights13)
flights
class(flights)
str(flights)
str(1.342)
str(1)
str(int(1))
str(as.int(1))
as.integer(1)
str(as.integer(1))
str(mtcars)
mpg$cyl
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
mtcars$cyl
(df <- tibble(x=c(1,2,3),y=c("a","b","c")))
mtcars
factor(mtcars$cyl)
factor(mtcars$cyl) + 1
as.character(mtcars$cyl)*2
diamonds
diamonds %>% group_by(cut) %>% count()
diamonds %>% summarise(min(carat))
diamonds %>% summarise(min=min(carat),max=max(carat),median=median(carat))
library(moments)
library(e1071)
diamonds %>%
summarise(kurtosis=kurtosis(carat))
library(e1071)
diamonds %>%
summarise(kurtosis=kurtosis(carat),
skewness=skewness(skewness))
diamonds %>%
summarise(kurtosis=kurtosis(carat),
skewness=skewness(carat))
rnorm(100)
skewness(rnorm(100))
plot(density(beta(1,1)))
plot(density(beta(100,1,1)))
plot(density(rbeta(100,1,1)))
plot(density(rbeta(100,1,10)))
skewness(rbeta(100,1,10))
skewness(rnorm(10000))
skewness(rbeta(10000,1,10))
plot(density(rnorm(1000,10,2)))
plot(density(rbeta(1000,10,2)))
plot(density(rbeta(1000,10,1)))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
group_by(cut) %>% count()
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,3,3)))
plot(density(rbeta(1000,5,5)))
plot(density(rbeta(1000,2,2)))
plot(density(rbeta(1000,2,2)))
skewness(rbeta(1000,2,2))
kurtosis(rbeta(1000,2,2))
plot(density(rbeta(1000,1,10)))
plot(density(rnorm(1000,10,1)))
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,2,2)))
plot(density(rbeta(1000,2,8)))
plot(density(rbeta(1000,2,4)))
plot(density(rbeta(1000,2,4)))
skewness(rbeta(1000,2,4))
kurtosis(rbeta(1000,2,4))
plot(density(rnorm(1000,10,1)))
skewness(rnorm(1000,10,1))
kurtosis(rnorm(1000,10,1))
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,10,10)))
plot(density(rbeta(1000,1,1)))
plot(density(rbeta(1000,1,1)))
skewness(rbeta(1000,1,1))
kurtosis(rbeta(1000,1,1))
plot(density(rbeta(1000,0.1,0.1)))
plot(density(rbeta(1000,100,1)))
plot(density(rbeta(1000,100,100)))
skewness(rnorm(1000,1000,1))
kurtosis(rnorm(1000,1000,1))
plot(density(rnorm(1000,1000,1)))
plot(density(x = rexp(1000)))
plot(density(rexp(1000)))
kurtosis(rexp(1000)))
kurtosis(rexp(1000))
skewness(rexp(1000))
rexp(1000)
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(10000))
kurtosis(rexp(10000))
density(rexp(10000))
plot(density(rexp(10000)))
plot(density(rexp(10000)))
skewness(rexp(10000))
kurtosis(rexp(10000))
diamonds %>%
summarise(min=min(carat),
max=max(carat),
median=median(carat),
mean=median(carat),
sd=sd(carat))
diamonds %>%
summarise(min=min(carat),
max=max(carat),
median=median(carat),
mean=median(carat),
sd=sd(carat),
IQR=IQR(carat))
sd(c(0,1,2,0,0,1,0,2))
sd(c(3,9,0,0,1,6))
IQR(c(0,1,2,0,0,1,0,2))
IQR(c(3,9,0,0,1,6))
quantile(c(3,9,0,0,1,6),c(0.25,0.75))
sort(c(3,9,0,0,1,6))
quantile(c(3,9,0,0,1,6),c(0.25))
quantile(c(3,9,0,0,1,6),c(0.2))
?quantile
library(tidyverse)
df1 <- tibble(age=c(25,29,22),name=c("Justin","Ian","Rosaline"))
df2 <- tibble(age=c(55,30,12),name=c("Hillary","Anna","Luis"))
(df <- bind_rows(df1,df2))
df1 <- tibble(age=c(25,29,22),name=c("Justin","Ian","Rosaline"))
df2 <- tibble(sex=c(55,30,12),name=c("Justin","Ian","Rosaline"))
(df <- bind_rows(df1,df2 %>% select(-name)))
(df <- bind_cols(df1,df2 %>% select(-name)))
(df <- bind_rows(df1,df2 %>% select(-name)))
left_join(df1,df2)
left_join(df1,df2,c("name"))
left_join(df1,df2,c("name"="name"))
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
# The CES data provided is in Stata13 format, so we need readstata13
library(readstata13)
# We need e1071 for kurtosis and skewness
library(e1071)
# We need kableExtra to produce nice html data tables
library(kableExtra)
# Read in the data, assign to df
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
# Let's make the data frame a tibble
df <- as_tibble(df)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
# The CES data provided is in Stata13 format, so we need readstata13
library(readstata13)
# We need e1071 for kurtosis and skewness
library(e1071)
# We need kableExtra to produce nice html data tables
library(kableExtra)
# Read in the data, assign to df
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
# Let's make the data frame a tibble
df <- as_tibble(df)
glimpse(df)
ggplot(df,aes(x=age)) +
geom_histogram()
sample_size_age <- sum(!is.na(df$age))
my_mean <- mean(df$age,na.rm=TRUE)
my_median <- median(df$age,na.rm=TRUE)
ggplot(df,aes(x=age)) +
geom_histogram(binwidth=1,fill="white",color="black") +
theme_classic() +
labs(x="Age",y="Count (in survey)",title="Age distribution in Canada",
caption=paste0("Data from CES 2019; n = ",format(sample_size_age,big.mark   = ","))) +
geom_vline(aes(xintercept=my_mean),linetype=2) +
annotate("text", x = my_mean-2, y = 90, label = "mean",angle = 90)
table(df$age_range,useNA = "always")
ggplot(df,aes(x=age_range)) +
geom_bar()
df <- df %>%
mutate(age_group=cut(age,breaks=c(-Inf,17,34,54,Inf),
label=c("0-17","18-34","35-54","55+")),
age_group=droplevels(age_group))
ggplot(df,aes(x=age_group)) +
geom_bar()
ggplot(df,aes(x=age_group)) +
geom_bar() + labs(x="",y="") +
geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white")
df <- df %>%
mutate(age_range = droplevels(age_range))
df <- df %>%
mutate(age_range=recode(age_range,
"(1) 18-24 years old"="18-24",
"(2) 25-34 years old"="25-34",
"(3) 35-44 years old"="35-44",
"(4) 45-54 years old"="45-54",
"(5) 55+ years old"="55+"))
ggplot(df,aes(x=age_range)) +
geom_bar() +
labs(x="",y="")
age_summary <- df %>%
summarize(mean_age = mean(age, na.rm = TRUE),
sd_age = sd(age, na.rm = TRUE),
min_age = min(age, na.rm = TRUE),
max_age = max(age, na.rm = TRUE),
median_age = median(age, na.rm = TRUE),
skew_age = skewness(age, na.rm = TRUE),
kurtosis_age = kurtosis(age, na.rm = TRUE),
n_age =  sum(!is.na(age)))
age_summary %>%
kable(format = "simple")
age_summary %>%
t() %>%
kable(format = "simple")
summary(df$q69)
ggplot(df,aes(x=hincome)) +
geom_histogram(binwidth = 1000) +
coord_cartesian(xlim=c(0,500000)) +
scale_x_continuous(breaks=seq(0,500000,by=100000),labels=c("0","100k","200k","300k","400k","500k"))
df <- df %>%
mutate(hincome=ifelse(q69 %in% c(-8,-9), NA, q69))
ggplot(df,aes(x=age,y=hincome)) +
geom_point(alpha=0.1) + geom_smooth(se=FALSE)
df$hincome
ggplot(df,aes(x=hincome)) +
geom_histogram(binwidth = 1000) +
coord_cartesian(xlim=c(0,500000)) +
scale_x_continuous(breaks=seq(0,500000,by=100000),labels=c("0","100k","200k","300k","400k","500k"))
df$hincome
summary(df$hincome)
kurtosis(df$hincome)
kurtosis(df$hincome,na.rm = TRUE)
rnorm(1000,1000,10)
kurtosis(rnorm(1000,1000,10))
kurtosis(df$hincome,na.rm = TRUE)
df$hincome-mean(df$hincome)
df$hincome-mean(df$hincome,na.rm=TRUE)
(df$hincome-mean(df$hincome,na.rm=TRUE))^4
mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4)
mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4,na.rm=TRUE)
a <- mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4,na.rm=TRUE)
sd(df$hincome)
sd(df$hincome,na.rm=TRUE)
sd(df$hincome,na.rm=TRUE)^4
b <- sd(df$hincome,na.rm=TRUE)^4
a/b
df$hincome
scales::rescale(df$hincome)
scales::rescale(df$hincome)
kurtosis(scales::rescale(df$hincome),na.rm=TRUE)
scales::rescale(df$hincome)
plot(scales::rescale(df$hincome))
plot(density(scales::rescale(df$hincome)))
plot(density(scales::rescale(df$hincome),na.rm=TRUE))
runif(100,0,1)
kurtosis(runif(100,0,1))
df$hincome
quantile(df$hincome,0.95)
quantile(df$hincome,0.95,na.rm=TRUE)
df$hincome<quantile(df$hincome,0.95,na.rm=TRUE)
df$hincome[df$hincome<quantile(df$hincome,0.95,na.rm=TRUE)]
a <- df$hincome[df$hincome<quantile(df$hincome,0.95,na.rm=TRUE)]
kurtosis(a,na.rm = TRUE)
a <- df$hincome[df$hincome<quantile(df$hincome,0.999,na.rm=TRUE)]
kurtosis(a,na.rm = TRUE)
summary(df$hincome)
a <- df$hincome[df$hincome<quantile(df$hincome,0.99,na.rm=TRUE)]
kurtosis(a,na.rm = TRUE)
a
quantile(df$hincome,0.99,na.rm=TRUE)
quantile(df$hincome,0.95,na.rm=TRUE)
quantile(df$hincome,0.999,na.rm=TRUE)
kurtosis(df$hincome)
kurtosis(df$hincome,na.rm = TRUE)
kurtosis(df$hincome,na.rm = TRUE)
kurtosis(df$hincome,na.rm = TRUE)
a <- (df$hincome-mean(df$hincome,na.rm=TRUE))^4
u4 <- (df$hincome-mean(df$hincome,na.rm=TRUE))^4
sd4 <- sd(df$hincome,na.rm=TRUE)
u4/sd4
mean(u4/sd4,na.rm = TRUE)
u4
sd(df$hincome,na.rm=TRUE)
u4 <- mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4)
sd4 <- sd(df$hincome,na.rm=TRUE)
u4/sd4
u4 <- mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4,na.rm=TRUE)
sd4 <- sd(df$hincome,na.rm=TRUE)
u4/sd4
u4 <- mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4,na.rm=TRUE)
sd4 <- sd(df$hincome,na.rm=TRUE)^4
u4/sd4
kurtosis(df$hincome,na.rm = TRUE)
u4 <- mean((df$hincome-mean(df$hincome,na.rm=TRUE))^4,na.rm=TRUE)
sd4 <- sd(df$hincome,na.rm=TRUE)^4
u4/sd4
u4/sd4 - 3
kurtosis(df$hincome,na.rm = TRUE)
rnorm(100,0,1)
c(rnorm(100,0,1),c(1000,1002))
kurtosis(c(rnorm(100,0,1),c(1000,1002)))
kurtosis(c(rnorm(100,0,1))
kurtosis(c(rnorm(100,0,1)))
kurtosis(c(rnorm(100,0,1)))
kurtosis(c(rnorm(100,0,1)))
kurtosis(c(rnorm(100,0,1),c(1000,1002)))
kurtosis(c(rnorm(100,0,1)))
kurtosis(c(rnorm(100,0,1),c(1000,1002)))
kurtosis(df$hincome,na.rm = TRUE)
quantile(df$hincome,na.rm=TRUE)
quantile98 <- quantile(df$hincome,na.rm=TRUE,0.98)
df$hincome<quantile98
df$hincome[df$hincome<quantile98]
kurtosis(df$hincome[df$hincome<quantile98])
kurtosis(df$hincome[df$hincome<quantile98],na.rm = TRUE)
quantile98 <- quantile(df$hincome,na.rm=TRUE,0.99)
quantile99 <- quantile(df$hincome,na.rm=TRUE,0.99)
kurtosis(df$hincome[df$hincome<quantile98],na.rm = TRUE)
plot(density(df$hincome))
plot(density(df$hincome,na.rm=TRUE))
