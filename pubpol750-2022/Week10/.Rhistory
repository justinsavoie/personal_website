df <- df %>% mutate(party=ifelse(grepl("P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl("Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl("C.A.Q",name),"CAQ",party))
df
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl("P.L.Q.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl("P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl("Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl("C.A.Q",name),"CAQ",party))
df
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl("P.L.Q.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl("P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl("Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl("C.A.Q",name),"CAQ",party))
df$party <- ifelse(is.na(df$party),"Other",party)
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl("P.L.Q.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl("P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl("Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl("C.A.Q",name),"CAQ",party))
df$party <- ifelse(is.na(df$party),"Other",df$party)
df %>%
group_by(party) %>%
summarise(n_votes <- sum(value,na.rm=TRUE))
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`)
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl("P.L.Q./Q.L.P.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl("P.Q.$",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl("Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl("C.A.Q",name),"CAQ",party))
df
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df %>% mutate(party=ifelse(grepl("P.L.Q./Q.L.P.",name),"PLQ",party))
df %>% mutate(party=ifelse(grepl("P.Q.$",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl(" P.L.Q./Q.L.P.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl(" P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl(" Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl(" C.A.Q",name),"CAQ",party))
df
df$party <- ifelse(is.na(df$party),"Other",df$party)
df %>%
group_by(party) %>%
summarise(n_votes <- sum(value,na.rm=TRUE))
library(tidyverse)
df <- tibble::tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10)
)
df
path <- "~/Downloads/resultats-section-vote2018/DGE-80.10_Abitibi-Est_Sans_SE.csv"
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
read_delim(path,delim = ";")
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df
df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`)
df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl(" P.L.Q./Q.L.P.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl(" P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl(" Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl(" C.A.Q",name),"CAQ",party))
df$party <- ifelse(is.na(df$party),"Other",df$party)
df
df %>%
group_by(party) %>%
summarise(n_votes <- sum(value,na.rm=TRUE))
df %>%
group_by(party) %>%
summarise(n_votes = sum(value,na.rm=TRUE))
df %>%
group_by(Circonscription,party) %>%
summarise(n_votes = sum(value,na.rm=TRUE))
path <- "~/Downloads/resultats-section-vote2018/DGE-80.10_Abitibi-Est_Sans_SE.csv"
clean_data <- function(path){
df <- read_delim(path,delim = ";",locale=locale(encoding="latin1"))
df <- df %>%
select(-Code,-`Date scrutin`,-Étendue,-`Nom des Municipalités`, -`Secteur`, -`Regroupement`,  -`S.V.`,  -`É.I.`,-`B.V.`,-`B.R.`) %>%
pivot_longer(cols = -c(Circonscription))
df$party <- NA
df <- df %>% mutate(party=ifelse(grepl(" P.L.Q./Q.L.P.",name),"PLQ",party))
df <- df %>% mutate(party=ifelse(grepl(" P.Q.",name),"PQ",party))
df <- df %>% mutate(party=ifelse(grepl(" Q.S.",name),"QS",party))
df <- df %>% mutate(party=ifelse(grepl(" C.A.Q",name),"CAQ",party))
df$party <- ifelse(is.na(df$party),"Other",df$party)
df %>%
group_by(Circonscription,party) %>%
summarise(n_votes = sum(value,na.rm=TRUE))
}
list.files("~/Downloads/resultats-section-vote2018/")
list.files("~/Downloads/resultats-section-vote2018/",full.names = TRUE)
my_paths <- list.files("~/Downloads/resultats-section-vote2018/",full.names = TRUE)
list_to_fill <- list()
for (i in my_paths){
list_to_fill[[i]] <- clean_data(i)
}
df_final <- bind_rows(list_to_fill)
df_final
library(haven)
library(survey)
library(tidyverse)
nhanesDemo <- read_xpt(url("https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/DEMO_I.XPT"))
?read_xpt
library(haven)
library(survey)
library(tidyverse)
nhanesDemo <- read_xpt(url("https://wwwn.cdc.gov/Nchs/Nhanes/2015-2016/DEMO_I.XPT"))
nhanesDemo$fpl        <- nhanesDemo$INDFMPIR
nhanesDemo$age        <- nhanesDemo$RIDAGEYR
nhanesDemo$gender     <- nhanesDemo$RIAGENDR
nhanesDemo$persWeight <- nhanesDemo$WTINT2YR
nhanesDemo$psu        <- nhanesDemo$SDMVPSU
nhanesDemo$strata     <- nhanesDemo$SDMVSTRA
nhanesAnalysis <- nhanesDemo %>%
select(fpl,
age,
gender,
persWeight,
psu,
strata)
nhanesAnalysis <- nhanesAnalysis %>%
mutate(gender = recode(gender, `1` = 0L,
`2` = 1L))
nhanesAnalysis$gender <- as.factor(nhanesAnalysis$gender)
################################################################################
# Data Wrangling #
################################################################################
# Copy and rename variables so they are more intuitive.
# fpl = percent of the federal poverty level (ranges from 0 to 5 (i.e., 0% - 500%))
# age = age in years
# gender = male or female
# persWeight = person-level weight
# psu = primary sampling unit
# strata = strata-level sampling unit
nhanesDemo$fpl        <- nhanesDemo$INDFMPIR
nhanesDemo$age        <- nhanesDemo$RIDAGEYR
nhanesDemo$gender     <- nhanesDemo$RIAGENDR
nhanesDemo$persWeight <- nhanesDemo$WTINT2YR
nhanesDemo$psu        <- nhanesDemo$SDMVPSU
nhanesDemo$strata     <- nhanesDemo$SDMVSTRA
# Since there are 47 variables, we will select only the variables we will use in
# this analysis.
nhanesAnalysis <- nhanesDemo %>%
select(fpl,
age,
gender,
persWeight,
psu,
strata)
# Recode gender
nhanesAnalysis <- nhanesAnalysis %>%
mutate(gender = recode(gender, `1` = 0L,
`2` = 1L))
# Convert "gender" to a factor variable. We need to do this so it isn't treated
# as a continuous variable in our analyses
nhanesAnalysis$gender <- as.factor(nhanesAnalysis$gender)
nhanesAnalysis
################################################################################
# Survey Weights #
################################################################################
# Here we use "svydesign" to assign the weights. We will use this new design
# variable "nhanesDesign" when running our analyses.
nhanesDesign <- svydesign(id      = ~psu,
strata  = ~strata,
weights = ~persWeight,
nest    = TRUE,
data    = nhanesAnalysis)
# Here we use "subset" to tell "nhanesDesign" that we want to only look at a
# specific subpopulation (i.e., those age between 18-79 years). This is
# important to do. If you don't do this and just restrict it in a different way
# your estimates won't have correct SEs.
ageDesign <- subset(nhanesDesign, age > 17 &
age < 80)
library(tidyverse)
library(readstata13)
df <- readstata13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
library(tidyverse)
library(readstata13)
df <- readstata13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
df$q31
table(df$q31)
prop.table(table(df$q31))
table(df$q31,useNA = "always")
table(df$q31,useNA = "always")
prop.table(table(df$q31))
df %>%
group_by(q31) %>%
count()
df %>%
group_by(q31) %>%
count() %>%
mutate(p=n/sum(n))
df %>%
group_by(q31) %>%
count() %>%
ungroup() %>%
mutate(p=n/sum(n))
prop.table(table(df$q31))
df$weight_CES
df %>%
group_by(q31) %>%
summarise(sum_weights=sum(weight_CES))
df %>%
group_by(q31) %>%
summarise(n=sum(weight_CES)) %>%
ungroup() %>%
mutate(p=n/sum(n))
df %>%
group_by(q31) %>%
count() %>%
ungroup() %>%
mutate(p=n/sum(n))
df$weight_PES
df$weight_CES
sum(df$weight_CES)
df
dim(df)
df %>%
group_by(q31) %>%
summarise(n=sum(weight_CES)) %>%
ungroup() %>%
mutate(p=n/sum(n))
df %>%
group_by(q31) %>%
summarise(nw=sum(weight_CES),n=count()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df %>%
group_by(q31) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df$p47
df %>%
group_by(p47) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df %>%
group_by(q39) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df %>%
group_by(q75) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df %>%
group_by(q44) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df$q14
df$q14r
df$q14
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
mean(df$q14)
weighted.mean(df$q14,na.rm = TRUE)
weighted.mean(df$q14,df$weight_CES)
df %>%
group_by(q44) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
df$weight_CES
CESDesign <- svydesign(weights = ~weight_CES
data    = df)
CESDesign <- svydesign(weights = ~weight_CES,
data    = df)
CESDesign <- svydesign(ids~.,
weights = ~weight_CES,
data    = df)
CESDesign <- svydesign(id~.,
weights = ~weight_CES,
data    = df)
?svydesign
CESDesign <- svydesign(id~0,
weights = ~weight_CES,
data    = df)
CESDesign <- svydesign(ids = ~0,
weights = ~weight_CES,
data    = df)
mean(df$q14)
weighted.mean(df$q14,df$weight_CES)
svymean(~q14, ageDesign, na.rm = TRUE)
CESDesign <- svydesign(ids = ~0,
weights = ~weight_CES,
data    = df)
svymean(~q14, CESDesign, na.rm = TRUE)
confint(svymean(~q14, CESDesign, na.rm = TRUE))
svymean(~q14, CESDesign, na.rm = TRUE)
q14mean <- svymean(~q14, CESDesign, na.rm = TRUE)
confint(q14mean)
svytable(~q14, CESDesign, na.rm = TRUE)
svytable(~q14, CESDesign)
svytable(~q44, CESDesign)
df %>%
group_by(q44) %>%
summarise(nw=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nw/sum(nw),p=n/sum(n))
animals <- 12,1,10,15
opponent <- 33,21,0,17
tibble(animals,opponent)
animals <- 12,1,10,15
opponent <- 33,21,0,17
tibble(animals,opponent)
animals <- c(12,1,10,15)
opponent <- c(33,21,0,17)
tibble(animals,opponent)
df <- tibble(animals,opponent)
index <- c(1,2,3,4)
df <- tibble(animals,opponent,index)
df
df$animals-df$opponent
df$diff <- df$animals-df$opponent
lm(diff~index,df)
summary(lm(diff~index,df))
df <- tibble(animals,opponent,index)
df$diff <- df$animals-df$opponent
df
lm(diff~index,df)
predict(tibble(index=5))
tibble(index=5)
predict(m,tibble(index=5))
(m <- lm(diff~index,df))
predict(m,tibble(index=5))
df
(m <- lm(diff~index,df))
predict(m,tibble(index=5))
predict(m,tibble(index=5),se=TRUE)
svytable(~q44, CESDesign)
?svyby
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta")
df$age
df$age_range
svyby(~q44,by=age_range, CESDesign)
CESDesign <- svydesign(ids = ~0,
weights = ~weight_CES,
data    = df)
svyby(~q44,by=age_range, CESDesign)
svyby(~q44,by=~age_range, CESDesign)
svyby(~q44,by=~age_range, CESDesign,svymean)
svyby(~q44,by=~age_range, CESDesign,svyratio)
svyby(~q44,by=~age_range, CESDesign,svymean)
svytable(~q31, CESDesign)
svyby(~q31,by=~age_range, CESDesign,svymean)
df$age_range
df %>% select(q31,q4,q3,age_range,q61)
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta") %>%
as_tibble()
df %>% select(q31,q4,q3,age_range,q61)
df %>% mutate_all(as.character)
df_sub <- df %>% select(q31,q4,q3,age_range,q61)
df_sub %>% mutate_all(as.character)
df_sub$q4
df_sub <- df_sub %>% mutate_all(as.character)
df_sub$q4
unique(df_sub$q4)
dput(unique(df_sub$q4))
dput(unique(df_sub$q3))
dput(unique(df_sub$q61))
dput(unique(df_sub$age_range))
library(tidyverse)
library(readxl)
read_excel("https://www.justinsavoie.com/pubpol750-2022/Week10/Weights Example Data.xlsx")
read_excel("www.justinsavoie.com/pubpol750-2022/Week10/Weights Example Data.xlsx")
read_excel("www.justinsavoie.com/pubpol750-2022/week10/Weights Example Data.xlsx")
read_excel("www.justinsavoie.com/pubpol750-2022/week10/Weights Example Data.xlsx")
read_excel("www.justinsavoie.com/pubpol750-2022/week10/Weights Example Data.xlsx","Sheet1")
read_excel("/Users/justinsavoie/Documents/personal_repos/personal_website/pubpol750-2022/Week10/Weights Example Data.xlsx")
df <- read_excel("~/Documents/personal_repos/personal_website/pubpol750-2022/Week10/Weights Example Data.xlsx")
setwd("~/Documents/personal_repos/personal_website/pubpol750-2022/Week10/")
df <- read_excel("Weights Example Data.xlsx")
df
df$weight <- NA
df
7.5/4
2.5/6
wbu <- 7.5/4
wu <- 2.5/6
df$weight <- c(wbu,wu,wbu,wbu,wu,wu,wu,wu,wu,wbu)
df
marginals <- c(`(Intercept)`= 1,
"EducationUniversity"=0.25)
df$weight <- c(wbu,wu,wbu,wbu,wu,wu,wu,wu,wu,wbu)
marginals <- c(`(Intercept)`= 1,
"EducationUniversity"=0.25)
tmp_form <- paste(" ~ Education")
surveyDesign <- svydesign(id = ~ 1,
weights = ~ 1,
data = df)
library(survey)
setwd("~/Documents/personal_repos/personal_website/pubpol750-2022/Week10/")
df <- read_excel("Weights Example Data.xlsx")
wbu <- 7.5/4
wu <- 2.5/6
df$weight <- c(wbu,wu,wbu,wbu,wu,wu,wu,wu,wu,wbu)
marginals <- c(`(Intercept)`= 1,
"EducationUniversity"=0.25)
tmp_form <- paste(" ~ Education")
surveyDesign <- svydesign(id = ~ 1,
weights = ~ 1,
data = df)
surveyDesign <- calibrate(design     = surveyDesign,
formula    = as.formula(tmp_form),
calfun     = "raking",
population = marginals,
maxit      = 2000)
weights(surveyDesign)
df$weight
df$weights_created_withR <- weights(surveyDesign)
df
mean(df$weight)
df$weight_created_withR <- weights(surveyDesign)
mean(df$weight)
sum(df$weight_created_withR)
mean(df$weight)
sum(df$weight_created_withR)
df$weight
df$weight / sum(df$weight)
df$weight_created_withR
df$weight_created_withR * nrow(df)
df$weight_created_withR
mean(df$weight_created_withR)
df$weight_created_withR * 31237362
df <- read_excel("Weights Example Data.xlsx","Sheet1")
df <- read_excel("Weights Example Data.xlsx","Sheet2")
df
df <- read_excel("Weights Example Data.xlsx","Sheet2")
df
df <- read_excel("Weights Example Data.xlsx","Sheet2")
marginals <- c(`(Intercept)`= 1,
"EducationUniversity"=0.25,
"GenderMale"=0.48,
"GenderOther"=0.02)
tmp_form <- paste(" ~ Education + Gender")
surveyDesign <- svydesign(id = ~ 1,
weights = ~ 1,
data = df)
surveyDesign <- calibrate(design     = surveyDesign,
formula    = as.formula(tmp_form),
calfun     = "raking",
population = marginals,
maxit      = 2000)
weights(surveyDesign)
weights(surveyDesign)
weights(surveyDesign) * 10
weights(surveyDesign) * 10
mean(weights(surveyDesign))
sum(weights(surveyDesign))
weights(surveyDesign)
weights(surveyDesign) * 10
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(readstata13)
library(survey)
df <- read.dta13("~/Downloads/2019 Canadian Election Study - Phone Survey v1.0.dta") %>%
as_tibble()
mean(df$q14)
weighted.mean(df$q14,df$weight_CES)
df %>%
group_by(q44) %>%
summarise(nweighted=sum(weight_CES),n=n()) %>%
ungroup() %>%
mutate(wp=nweighted/sum(nweighted),p=n/sum(n))
df$q14
t.test(df$q14)
confint(t.test(df$q14))
t.test(df$q14)
t.test(df$q14)[[1]]
t.test(df$q14)[[2]]
t.test(df$q14)[[3]]
t.test(df$q14)[[4]]
47.84836-45.65546
47.29210-45.4425
