library(readxl)
library(tidyverse)
library(tidyverse)
library(lubridate)
Parliamentarians <- read_excel("~/Downloads/Parliamentarians.xlsx")
# filter by whether "MP" is in the variable `Type of Parliamentarian`
Parliamentarians <- filter(Parliamentarians,str_detect(`Type of Parliamentarian`,"MP"))
# create (mutate) variables for start and end date of the parliamentarian
# str_sub(x,5,14) returns the values between positions 5 and 14
# e.g. str_sub("abcdefghytr56",3,10) returns "cdefghyt"
# yms() coerces dates-as-string to date format
Parliamentarians <- mutate(Parliamentarians,date_started=ymd(str_sub(`Type of Parliamentarian`,5,14)))
Parliamentarians <- mutate(Parliamentarians,date_ended=str_sub(`Type of Parliamentarian`,18,27))
# Clean and extract party and province. These are regular expressions and it's fine if it's not clear. Regular expression extract/replace data based on patterns.
# If you are curious, take a look at this:
# https://jfjelstul.github.io/regular-expressions-tutorial/
Parliamentarians <- mutate(Parliamentarians,party=trimws(str_extract(`Political Affiliation`, "[^\\()]+")))
Parliamentarians <- mutate(Parliamentarians,province=str_extract(`Province/Territory`, "[^\\\r]+"))
# Change format of date to date format
Parliamentarians <- mutate(Parliamentarians,date_ended=ymd(Parliamentarians$date_ended,quiet = TRUE))
# If no end date, Parliamentarian is still in HoC so put today as end date.
# If you are very curious, look up difference between ifelse() and if_else()
Parliamentarians <- mutate(Parliamentarians,date_ended=if_else(is.na(date_ended),ymd(today()),date_ended))
# Keep only those parties, let's not keep the small parties / indps
names_keep <- c("Conservative", "Conservative Party of Canada", "Liberal Party of Canada",
"New Democratic Party", "Progressive Conservative Party")
Parliamentarians <- filter(Parliamentarians, party %in% names_keep)
# Keep only variables we need
Parliamentarians <- select(Parliamentarians, Name,Gender,party,date_started,date_ended,province)
# Delete rows where missing values
Parliamentarians <- na.omit(Parliamentarians)
Parliamentarians <- mutate(Parliamentarians,year=year(date_started))
Parliamentarians <- mutate(Parliamentarians,year_period=cut(year,c(1860,1900,1950,2000,2025),dig.lab = 4))
ggplot(Parliamentarians,aes(x=Gender,fill=party)) +
geom_bar() +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","darkblue","red","orange","darkblue"))
library(tidyverse)
library(brms)
bind <- function(...) cbind(...)
N <- 20
df <- data.frame(
y1 = rbinom(N, 10, 0.5), y2 = rbinom(N, 10, 0.7),
y3 = rbinom(N, 10, 0.9), x = rnorm(N)
) %>%
mutate(
size = y1 + y2 + y3,
y1 = y1 / size,
y2 = y2 / size,
y3 = y3 / size
)
df$y <- with(df, cbind(y1, y2, y3))
make_stancode(bind(y1, y2, y3) ~ x, df, Dirichlet())
make_standata(bind(y1, y2, y3) ~ x, df, Dirichlet())
fit <- brm(bind(y1, y2, y3) ~ x, df, Dirichlet(),cores=4)
library(DirichletReg)
fit <- brm(bind(y1, y2, y3) ~ x, df, Dirichlet(),cores=4)
fit <- brm(bind(y1, y2, y3) ~ x, df, family=Dirichlet(),cores=4)
sessionInfo()
fit <- brm(bind(y1, y2, y3) ~ x, df, family="dirichlet",cores=4)
fit
posterior_epred(fit)
dim(posterior_epred(fit))
apply(posterior_epred(fit),c(2,3),mean)
make_stancode(bind(y1, y2, y3) ~ x, df, Dirichlet())
make_stancode(bind(y1, y2, y3) ~ x, df, family="dirichlet")
make_standata
list.files("")
