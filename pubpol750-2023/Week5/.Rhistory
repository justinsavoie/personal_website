ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,position = "stack")
Parliamentarians
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.7,position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stacked")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
Parliamentarians
Parliamentarians
Parliamentarians %>%
filter(year_period!="(2000,2025]")
Parliamentarians <- Parliamentarians %>%
filter(year_period!="(2000,2025]")
ggplot() +
geom_density(data=Parliamentarians,aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),position = "stack")
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.8)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_wrap(~Gender)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_wrap(~Gender)
Parliamentarians
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office),fill=party) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender)) +
scale_fill_manual(values=c("darkblue","red","orange"))
library(readxl)
library(tidyverse)
library(lubridate)
Parliamentarians <- read_excel("~/Downloads/Parliamentarians.xlsx")
# filter by whether "MP" is in the variable `Type of Parliamentarian`
Parliamentarians <- filter(Parliamentarians,str_detect(`Type of Parliamentarian`,"MP"))
# create (mutate) variables for start and end date of the parliamentarian
# str_sub(x,5,14) returns the values between positions 5 and 14
# e.g. str_sub("abcdefghytr56",3,10) returns "cdefghyt"
# yms() coerces dates-as-string to date format
Parliamentarians <- mutate(Parliamentarians,date_started=ymd(str_sub(`Type of Parliamentarian`,5,14)))
Parliamentarians <- mutate(Parliamentarians,date_ended=str_sub(`Type of Parliamentarian`,18,27))
# Clean and extract party and province. These are regular expressions and it's fine if it's not clear. Regular expression extract/replace data based on patterns.
# If you are curious, take a look at this:
# https://jfjelstul.github.io/regular-expressions-tutorial/
Parliamentarians <- mutate(Parliamentarians,party=trimws(str_extract(`Political Affiliation`, "[^\\()]+")))
Parliamentarians <- mutate(Parliamentarians,province=str_extract(`Province/Territory`, "[^\\\r]+"))
# Change format of date to date format
Parliamentarians <- mutate(Parliamentarians,date_ended=ymd(Parliamentarians$date_ended,quiet = TRUE))
# If no end date, Parliamentarian is still in HoC so put today as end date.
# If you are very curious, look up difference between ifelse() and if_else()
Parliamentarians <- mutate(Parliamentarians,date_ended=if_else(is.na(date_ended),ymd(today()),date_ended))
# Keep only those parties, let's not keep the small parties / indps
names_keep <- c("Conservative", "Conservative Party of Canada", "Liberal Party of Canada",
"New Democratic Party", "Progressive Conservative Party")
Parliamentarians <- filter(Parliamentarians, party %in% names_keep)
# Keep only variables we need
Parliamentarians <- select(Parliamentarians, Name,Gender,party,date_started,date_ended,province)
# Delete rows where missing values
Parliamentarians <- na.omit(Parliamentarians)
ggplot(Parliamentarians,aes(x=Gender)) +
geom_bar()
ggsave("~/Desktop/figure1.png")
Parliamentarians_grouped <- group_by(Parliamentarians,Gender)
to_plot <- summarise(Parliamentarians_grouped,count=n())
ggplot(to_plot,aes(x=Gender,y=count)) +
geom_bar(stat='identity')
ggsave("~/Desktop/figure2.png")
Parliamentarians <- mutate(Parliamentarians,year=year(date_started))
Parliamentarians <- mutate(Parliamentarians,year_period=cut(year,c(1860,1900,1950,2000,2025),dig.lab = 4))
ggplot(Parliamentarians,aes(x=Gender)) +
geom_bar() +
facet_wrap(~year_period) +
scale_y_continuous(limits=c(0,1300))
ggsave("~/Desktop/figure3.png")
ggplot(Parliamentarians,aes(x=Gender,fill=party)) +
geom_bar() +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","darkblue","red","orange","darkblue"))
ggsave("~/Desktop/figure4.png")
Parliamentarians <- mutate(Parliamentarians,party=recode(party,!!!c("Conservative Party of Canada"="Conservative",
"Progressive Conservative Party"="Conservative")))
ggplot(Parliamentarians,aes(x=Gender,fill=party)) +
geom_bar() +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","red","orange"))
ggsave("~/Desktop/figure5.png")
to_plot <- Parliamentarians %>%
group_by(Gender,party,year_period) %>%
count()
ggplot(to_plot,aes(x=Gender,y=n,fill=party)) +
geom_bar(stat = 'identity') +
facet_grid(cols=vars(party),rows=vars(year_period)) +
theme(legend.position = "none") +
scale_fill_manual(values=c("darkblue","red","orange"))
Parliamentarians <- Parliamentarians %>%
mutate(year_in_office=year(date_ended)-year(date_started))
Parliamentarians <- Parliamentarians %>%
filter(year_period!="(2000,2025]")
ggplot() +
geom_density(data=Parliamentarians,aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office))
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=Gender),alpha=0.6)
ggplot() +
geom_density(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender))
ggplot() +
geom_histogram(data=Parliamentarians%>%filter(Name!='Brecken, Frederick de St Croix'),aes(x=year_in_office,fill=party)) +
facet_grid(cols=vars(party),rows=vars(Gender)) +
scale_fill_manual(values=c("darkblue","red","orange"))
mtcars_grouped <- group_by(mtcars,cyl)
count(mtcars_grouped)
summarise(mtcars_grouped,n=n())
mtcars %>%
group_by(cyl) %>%
count()
my_vector <- c(1,2,3,4,8)
mean(my_vector)
my_vector %>%
mean()
dem_score <- read_csv("https://www.justinsavoie.com/pubpol750-2022/homework1/parliamentarians_sub.csv")
dem_score <- read_csv("https://www.justinsavoie.com/pubpol750-2022/homework1/Parliamentarians_subset100.csv")
Parliamentarians_subset100 <- read_csv("/Users/justinsavoie/Documents/personal_repos/personal_website/pubpol750-2022/Homework1/Parliamentarians_subset100.csv")
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
library(haven)
library(readstata13)
read_spss()
?factor
1+4i
(1+4i)*i
(1+4i)*1i
?raw
library(tidyverse)
flights
library(nycflights13)
flights
class(flights)
str(flights)
str(1.342)
str(1)
str(int(1))
str(as.int(1))
as.integer(1)
str(as.integer(1))
str(mtcars)
mpg$cyl
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
mtcars$cyl
(df <- tibble(x=c(1,2,3),y=c("a","b","c")))
mtcars
factor(mtcars$cyl)
factor(mtcars$cyl) + 1
as.character(mtcars$cyl)*2
diamonds
diamonds %>% group_by(cut) %>% count()
diamonds %>% summarise(min(carat))
diamonds %>% summarise(min=min(carat),max=max(carat),median=median(carat))
library(moments)
library(e1071)
diamonds %>%
summarise(kurtosis=kurtosis(carat))
library(e1071)
diamonds %>%
summarise(kurtosis=kurtosis(carat),
skewness=skewness(skewness))
diamonds %>%
summarise(kurtosis=kurtosis(carat),
skewness=skewness(carat))
rnorm(100)
skewness(rnorm(100))
plot(density(beta(1,1)))
plot(density(beta(100,1,1)))
plot(density(rbeta(100,1,1)))
plot(density(rbeta(100,1,10)))
skewness(rbeta(100,1,10))
skewness(rnorm(10000))
skewness(rbeta(10000,1,10))
plot(density(rnorm(1000,10,2)))
plot(density(rbeta(1000,10,2)))
plot(density(rbeta(1000,10,1)))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
group_by(cut) %>% count()
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,3,3)))
plot(density(rbeta(1000,5,5)))
plot(density(rbeta(1000,2,2)))
plot(density(rbeta(1000,2,2)))
skewness(rbeta(1000,2,2))
kurtosis(rbeta(1000,2,2))
plot(density(rbeta(1000,1,10)))
plot(density(rnorm(1000,10,1)))
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,2,2)))
plot(density(rbeta(1000,2,8)))
plot(density(rbeta(1000,2,4)))
plot(density(rbeta(1000,2,4)))
skewness(rbeta(1000,2,4))
kurtosis(rbeta(1000,2,4))
plot(density(rnorm(1000,10,1)))
skewness(rnorm(1000,10,1))
kurtosis(rnorm(1000,10,1))
plot(density(rbeta(1000,1,10)))
plot(density(rbeta(1000,10,10)))
plot(density(rbeta(1000,1,1)))
plot(density(rbeta(1000,1,1)))
skewness(rbeta(1000,1,1))
kurtosis(rbeta(1000,1,1))
plot(density(rbeta(1000,0.1,0.1)))
plot(density(rbeta(1000,100,1)))
plot(density(rbeta(1000,100,100)))
skewness(rnorm(1000,1000,1))
kurtosis(rnorm(1000,1000,1))
plot(density(rnorm(1000,1000,1)))
plot(density(x = rexp(1000)))
plot(density(rexp(1000)))
kurtosis(rexp(1000)))
kurtosis(rexp(1000))
skewness(rexp(1000))
rexp(1000)
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(1000))
kurtosis(rexp(10000))
kurtosis(rexp(10000))
density(rexp(10000))
plot(density(rexp(10000)))
plot(density(rexp(10000)))
skewness(rexp(10000))
kurtosis(rexp(10000))
diamonds %>%
summarise(min=min(carat),
max=max(carat),
median=median(carat),
mean=median(carat),
sd=sd(carat))
diamonds %>%
summarise(min=min(carat),
max=max(carat),
median=median(carat),
mean=median(carat),
sd=sd(carat),
IQR=IQR(carat))
sd(c(0,1,2,0,0,1,0,2))
sd(c(3,9,0,0,1,6))
IQR(c(0,1,2,0,0,1,0,2))
IQR(c(3,9,0,0,1,6))
quantile(c(3,9,0,0,1,6),c(0.25,0.75))
sort(c(3,9,0,0,1,6))
quantile(c(3,9,0,0,1,6),c(0.25))
quantile(c(3,9,0,0,1,6),c(0.2))
?quantile
c(3,9,0,0,1,6)
sort(c(3,9,0,0,1,6))
quantile(sort(c(3,9,0,0,1,6)),c(0.25))
6/4
quantile(c(0,0,0,1,3,6,9),0.25)
quantile(c(0,0,0,1,3,6,9),1)
quantile(c(0,0,0,1,3,6,9),0)
quantile(c(0,0,0,1,3,6,9),0.5)
quantile(c(0,0,0,1,3,6,9),0.2)
quantile(c(0,0,0,1,3,6,9),0.25)
quantile(c(0,0,0,1,3,6,9),0.1)
quantile(c(0,0,0,1,3,6,9),0.01)
quantile(c(0,0,0,1,3,6,9),0.1)quantile(sort(c(3,9,0,0,1,6)),c(0.25))
quantile(sort(c(3,9,0,0,1,6)),c(0.25))
c(0,0,1,3,6,9)
sort(c(0,0,1,3,6,9))
quantile(sort(c(0,0,1,3,6,9)),0.25)
1/6
2/6
3/6
quantile(c(0,0,1,3,6,9),c(0.25))
diamonds
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
knitr::include_graphics("images/types.png")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
```
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
knitr::include_graphics("images/types.png")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
```
diamonds |>
summarise(
min=min(carat),
max=max(carat),
median=median(carat),
mean=median(carat),
sd=sd(carat),
IQR=IQR(carat)
)
```
options(htmltools.dir.version = FALSE)
library(kableExtra)
library(tidyverse)
knitr::include_graphics("images/types.png")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
```
diamonds
diamonds$carat
sd(c(0,1,2,0,0,1,0,2))
sd(c(3,9,0,0,1,6,13,10))
var(c(0,1,2,0,0,1,0,2))
sd(a);sd(b);var(a);sd(a)^2
a <- c(0,1,2,0,0,1,0,2)
b <- c(3,9,0,0,1,6,13,10)
sd(a);sd(b);var(a);sd(a)^2
sort(c(3,9,0,0,1,6,13,10))
c(0,0,0,1,3,6,7,9,10,13,15,20)
c <- c(0,0,0,1,3,6,7,9,10,13,15,20)
IQR(c)
quantile(c,c(0,0.25,0.5,0.75,1))
plot(c(0,0,0,1,3,6,7,9,10,13,15,20))
plot(density(c(0,0,0,1,3,6,7,9,10,13,15,20)))
plot(density(c(0,0,0,1,3,6,7,9,10,13,15,20)))
plot((c(0,0,0,1,3,6,7,9,10,13,15,20)))
plot(density(c(0,0,0,1,3,6,7,9,10,13,15,20)))
plot(density(c(0,0,0,1,3,6,7,9,10,13,15,20)))
abline(v=0, col="red", lwd=2, lty=2)
quantile(c,c(0,0.25,0.5,0.75,1))
plot(density(c)
abline(v=0.75, col="black", lwd=2, lty=2)
plot(density(c)
abline(v=0.75, col="black", lwd=2, lty=2)
plot(density(c))
abline(v=0.75, col="black", lwd=2, lty=2)
abline(v=10.75, col="black", lwd=2, lty=2)
plot(density(c),main="", xlab="", ylab="")
abline(v=0.75, col="black", lwd=2, lty=2)
abline(v=10.75, col="black", lwd=2, lty=2)
plot((c),main="", xlab="", ylab="")
plot((c),main="", xlab="", ylab="")
abline(v=0.75, col="black", lwd=2, lty=2)
abline(v=10.75, col="black", lwd=2, lty=2)
c <- c(0,0,0,1,3,6,7,9,10,13,15,20)
IQR(c)
quantile(c,c(0,0.25,0.5,0.75,1))
c
rep(1,11)
plot((c),rep(1,11),main="", xlab="", ylab="")
plot((c),rep(1,12),main="", xlab="", ylab="")
plot((c),rep(1,12),main="", xlab="", ylab="")
abline(v=0.75, col="black", lwd=2, lty=2)
abline(v=10.75, col="black", lwd=2, lty=2)
plot(data, rep(1,12), main="", xlab="", ylab="", yaxt="n")
plot(x, rep(1,12), main="", xlab="", ylab="", yaxt="n")
plot(c, rep(1,12), main="", xlab="", ylab="", yaxt="n")
abline(v=0.75, col="black", lwd=2, lty=2)
abline(v=10.75, col="black", lwd=2, lty=2)
ggplot(data = diamonds) +
geom_density(mapping = aes(x = carat))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat))
diamonds
diamonds |>
summarise_at(c(x,y,z),min,max)
?summarise_at
diamonds |>
summarise_at(c(x,y,z),list(min, max))
diamonds
diamonds |>
summarise_at(vars(x,y,z),list(min, max))
diamonds |>
summarise(
min(x),
max(x),
mean(x),
median(x),
sd(x),
min(y),
max(y),
mean(y),
median(y),
sd(y),
min(z),
max(z),
mean(z),
median(z),
sd(z)
)
diamonds |>
summarise_at(vars(x,y,z),list(min, max, mean, median, sd))
diamonds |>
summarise_at(
vars(x, y, z),
list(
mean = ~mean(.),
median = ~median(.), min = ~min(.), max = ~max(.)))
diamonds |>
summarise_at(
vars(x, y, z),
list(
mean = mean,
median = ~median(.),
min = ~min(.),
max = ~max(.)))
diamonds |>
summarise_at(
vars(x, y, z),
list(
mean,
median,
min,
max)
)
diamonds |>
summarise_at(
vars(x, y, z),
list(
mean=mean,
median=median,
min=min,
max-max)
)
diamonds |>
summarise_at(
vars(x, y, z),
list(
mean=mean,
median=median,
min=min,
max=max)
)
summary(diamonds$price)
ggplot(diamonds) +
geom_histogram(aes(x=price),binwidth = 1000)
ggplot(diamonds) +
geom_histogram(aes(x=price),binwidth = 100)
ggplot(diamonds) +
geom_histogram(aes(x=price),binwidth = 20)
diamonds$carat
ggplot(diamonds) +
geom_histogram(aes(x=carat))
diamonds |>
group_by(carat) |>
count()
diamonds |>
group_by(carat) |>
count() |>
View()
# Depending on how much time left, we can do EDA on 2021 Canada Democracy Checkup
# https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/KCIK9D
# Download Stata 14 Binary File
library(haven)
read_stata(read"~/Downloads/DC 2021 v1.dta")
read_stata("~/Downloads/DC 2021 v1.dta")
read_stata("~/Downloads/DC 2021 v1.dta")
df <- read_stata("~/Downloads/DC 2021 v1.dta")
df$dc21_leader_ratings_23
mean(df$dc21_leader_ratings_23)
df |>
summarise(mean(dc21_leader_ratings_23))
df |>
filter(dc21_leader_ratings_23!=-99) |>
summarise(mean(dc21_leader_ratings_23))
df |>
summarise(mean_rating_Trudeau=mean(dc21_leader_ratings_23))
df |>
filter(dc21_leader_ratings_23!=-99) |>
summarise(mean_rating_Trudeau=mean(dc21_leader_ratings_23))
